Port of rosjava, Android_core etc. to ROS Kinetic Kame
	
# Following script sets up a working ROS Kinetic for Android:

# Setup Java PPA
sudo add-apt-repository ppa:webupd8team/java

# Install Android Studio
export JAVA_HOME=/usr/lib/jvm/java-8-oracle
wget https://dl.google.com/dl/android/studio/ide-zips/2.2.0.12/android-studio-ide-145.3276617-linux.zip
mkdir ~/Programs
unzip android-studio-ide-145.3276617-linux.zip -d ~/Programs
rm android-studio-ide-145.3276617-linux.zip
sh ~/Programs/android-studio/bin/studio.sh

# Start Android SDK-manager
# Select (Build-Tools 21.1.2 & 24.0.2) + (SDK 23, 21, 18, 15, 10 & 13) + (Android Support) #
~/Android/Sdk/tools/android

# Install ROS Kinetic
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 0xB01FA116
sudo apt-get update
sudo apt-get 
sudo rosdep init
rosdep update
echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc
. /opt/ros/kinetic/setup.bash

# Fetch dependencies 
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install python-rosinstall freeglut3-dev libblas-dev liblapack-dev libcvc3-dev 
	build-essential cmake git libgtk2.0-dev pkg-config python-dev python-numpy 
	libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev 
	libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev 
	libgstreamer-plugins-base0.10-dev libgphoto2-dev gphoto2 
	libgstreamer-plugins-base1.0-dev libv4l-dev libtbb-dev libfaac-dev libmp3lame-dev 
	libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev 
	libxvidcore-dev x264 v4l-utils exfat-fuse exfat-utils lib32stdc++6 lib32z1 
	python-wstool ros-kinetic-warehouse-ros libzbar-dev zbar-tools qtbase5-dev 
	qtbase5-dev-tools libpcap-dev libboost-dev libvtk6-dev libflann-dev libeigen3-dev 
	libopenni2-dev python-rosinstall-generator oracle-java7-installer

# .bashrc
echo "export ROS_MAVEN_REPOSITORY=~/Sources/Repos/rosjava_mvn_repo" >> ~/.bashrc
export ROS_MAVEN_REPOSITORY=~/Sources/Repos/rosjava_mvn_repo
echo "export ROS_MAVEN_DEPLOYMENT_REPOSITORY=~/Sources/Repos/rosjava_mvn_repo" >> ~/.bashrc
export ROS_MAVEN_DEPLOYMENT_REPOSITORY=~/Sources/Repos/rosjava_mvn_repo
echo "export ANDROID_HOME=~/Android/Sdk" >> ~/.bashrc
export ANDROID_HOME=~/Android/Sdk
echo 'export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools' >> ~/.bashrc

# Gradle daemon
mkdir ~/.gradle
cd ~/.gradle
rm gradle.properties
wget http://hippomormor.ddns.net/Ressources/gradle.properties
echo "$($GREEN)Gradle daemon activated $($NC)"

# Maven
mkdir -p ~/Sources/Repos
cd ~/Sources/Repos
git clone https://github.com/rosjava/rosjava_mvn_repo

# rosjava
mkdir -p ~/Sources/rosjava/devel/share
ln -s ~/Sources/Repos/rosjava_mvn_repo ~/Sources/rosjava/devel/share/maven
wstool init -j4 ~/Sources/rosjava/src https://raw.githubusercontent.com/hippomormor/rosjava/master/rosjava.rosinstall
cd ~/Sources/rosjava/src
catkin_init_workspace
cd ..
export JAVA_HOME=/usr/lib/jvm/java-7-oracle
catkin_make install
echo "source ~/Sources/rosjava/devel/setup.bash" >> ~/.bashrc
. devel/setup.bash

# Android_core
mkdir -p ~/Sources/android_core/devel/share
ln -s ~/Sources/Repos/rosjava_mvn_repo ~/Sources/android_core/devel/share/maven
cd ~/Sources/android_core
wstool init -j4 src https://raw.githubusercontent.com/hippomormor/rosjava/master/android_core.rosinstall
cd src
catkin_init_workspace
cd ..
sudo apt-get install oracle-java8-set-default
export JAVA_HOME=/usr/lib/jvm/java-8-oracle
catkin_make install
echo "source ~/Sources/android_core/devel/setup.bash" >> ~/.bashrc
. devel/setup.bash

# Android_interactions
mkdir -p ~/Sources/android_interactions/devel/share
ln -s ~/Sources/Repos/rosjava_mvn_repo ~/Sources/android_interactions/devel/share/maven
cd ~/Sources/android_interactions
wstool init -j4 src https://raw.githubusercontent.com/hippomormor/rosjava/master/android_interactions.rosinstall
cd src
catkin_init_workspace
cd ..
sudo apt-get install oracle-java8-set-default
export JAVA_HOME=/usr/lib/jvm/java-8-oracle
catkin_make install
echo "source ~/Sources/android_interactions/devel/setup.bash" >> ~/.bashrc
. devel/setup.bash

# Done, restart Terminal!


# Following script sets up a working catkin workspace for ROS Kinetic for Android Studio 2.2 (SDK 23):
# !REPLACE 'NAME' WITH YOUR PROJECT-NAME!

mkdir -p ~/Workspaces/NAME/src
cd ~/Workspaces/NAME/src

catkin_create_android_pkg NAME android_core rosjava_core std_msgs
cd NAME
catkin_create_android_project -s 23 -p com.NAME.org NAME

rm build.gradle
wget http://hippomormor.ddns.net/Ressources/build.gradleTOP
mv build.gradleTOP build.gradle

cd gradle/wrapper
rm gradle-wrapper.properties
wget http://hippomormor.ddns.net/Ressources/gradle-wrapper.properties

cd ../../NAME
rm build.gradle
wget http://hippomormor.ddns.net/Ressources/build.gradle
sed -i 's/test/'NAME'/g' build.gradle

cd src/main
rm AndroidManifest.xml
wget http://hippomormor.ddns.net/Ressources/AndroidManifest.xml
ACT="$(tr '[:lower:]' '[:upper:]' <<< ${NAME:0:1})${NAME:1}"
sed -i 's/Hejsa/'$ACT'/g' AndroidManifest.xml
sed -i 's/hejsa/'$NAME'/g' AndroidManifest.xml

cd ~/Workspaces/NAME

catkin_make

# YOUR BUILD IS LOCATED AT: 
~/Workspaces/NAME
